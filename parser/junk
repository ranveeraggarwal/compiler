    parse(): Parsing starts
    push(state 0)
    ==
    nextToken(): using `INT'
    lookup(0, `INT'): shift 5 (`INT' processed)
    push(state 5)
    ==
    lookup(5, `_UNDETERMINED_'): default reduction by rule 5
    executeAction(): of rule 5 ...
    ... action of rule 5 completed
    pop(1) from stack having size 2
    pop(): next state: 0, token: `type_specifier'
    reduce(): by rule 5 to N-terminal `type_specifier'
    ==
    lookup(0, `type_specifier'): shift 3 (`type_specifier' processed)
    push(state 3)
    ==
    nextToken(): using `IDENTIFIER'
    lookup(3, `IDENTIFIER'): shift 9 (`IDENTIFIER' processed)
    push(state 9)
    ==
    nextToken(): using `(' (40)
    lookup(9, `(' (40)): shift 12 (`(' (40) processed)
    push(state 12)
    ==
    nextToken(): using `)' (41)
    lookup(12, `)' (41)): shift 31 (`)' (41) processed)
    push(state 31)
    ==
    lookup(31, `_UNDETERMINED_'): default reduction by rule 8
    executeAction(): of rule 8 ...
    ... action of rule 8 completed
    pop(3) from stack having size 5
    pop(): next state: 3, token: `fun_declarator'
    reduce(): by rule 8 to N-terminal `fun_declarator'
    ==
    lookup(3, `fun_declarator'): shift 8 (`fun_declarator' processed)
    push(state 8)
    ==
    nextToken(): using `{' (123)
    lookup(8, `{' (123)): shift 11 (`{' (123) processed)
    push(state 11)
    ==
    nextToken(): using `INT'
    lookup(11, `INT'): shift 5 (`INT' processed)
    push(state 5)
    ==
    lookup(5, `_UNDETERMINED_'): default reduction by rule 5
    executeAction(): of rule 5 ...
    ... action of rule 5 completed
    pop(1) from stack having size 5
    pop(): next state: 11, token: `type_specifier'
    reduce(): by rule 5 to N-terminal `type_specifier'
    ==
    lookup(11, `type_specifier'): shift 23 (`type_specifier' processed)
    push(state 23)
    ==
    nextToken(): using `IDENTIFIER'
    lookup(23, `IDENTIFIER'): shift 58 (`IDENTIFIER' processed)
    push(state 58)
    ==
    lookup(58, `_UNDETERMINED_'): default reduction by rule 12
    executeAction(): of rule 12 ...
    ... action of rule 12 completed
    pop(1) from stack having size 6
    pop(): next state: 23, token: `declarator'
    reduce(): by rule 12 to N-terminal `declarator'
    ==
    lookup(23, `declarator'): shift 57 (`declarator' processed)
    push(state 57)
    ==
    nextToken(): using `;' (59)
    lookup(57, `;' (59)): default reduction by rule 69
    executeAction(): of rule 69 ...
    ... action of rule 69 completed
    pop(1) from stack having size 6
    pop(): next state: 23, token: `declarator_list'
    reduce(): by rule 69 to N-terminal `declarator_list'
    ==
    lookup(23, `declarator_list'): shift 56 (`declarator_list' processed)
    push(state 56)
    ==
    lookup(56, `;' (59)): shift 85 (`;' (59) processed)
    push(state 85)
    ==
    lookup(85, `_UNDETERMINED_'): default reduction by rule 68
    executeAction(): of rule 68 ...
    ... action of rule 68 completed
    pop(3) from stack having size 7
    pop(): next state: 11, token: `declaration'
    reduce(): by rule 68 to N-terminal `declaration'
    ==
    lookup(11, `declaration'): shift 17 (`declaration' processed)
    push(state 17)
    ==
    lookup(17, `_UNDETERMINED_'): default reduction by rule 66
    executeAction(): of rule 66 ...
    ... action of rule 66 completed
    pop(1) from stack having size 5
    pop(): next state: 11, token: `declaration_list'
    reduce(): by rule 66 to N-terminal `declaration_list'
    ==
    lookup(11, `declaration_list'): shift 15 (`declaration_list' processed)
    push(state 15)
    ==
    nextToken(): using `WHILE'
    lookup(15, `WHILE'): shift 25 (`WHILE' processed)
    push(state 25)
    ==
    nextToken(): using `(' (40)
    lookup(25, `(' (40)): shift 60 (`(' (40) processed)
    push(state 60)
    ==
    nextToken(): using `IDENTIFIER'
    lookup(60, `IDENTIFIER'): shift 48 (`IDENTIFIER' processed)
    push(state 48)
    ==
    nextToken(): using `)' (41)
    lookup(48, `)' (41)): default reduction by rule 57
    executeAction(): of rule 57 ...
    ... action of rule 57 completed
    pop(1) from stack having size 8
    pop(): next state: 60, token: `l_expression'
    reduce(): by rule 57 to N-terminal `l_expression'
    ==
    lookup(60, `l_expression'): shift 49 (`l_expression' processed)
    push(state 49)
    ==
    lookup(49, `)' (41)): default reduction by rule 52
    executeAction(): of rule 52 ...
    ... action of rule 52 completed
    pop(1) from stack having size 8
    pop(): next state: 60, token: `primary_expression'
    reduce(): by rule 52 to N-terminal `primary_expression'
    ==
    lookup(60, `primary_expression'): shift 47 (`primary_expression' processed)
    push(state 47)
    ==
    lookup(47, `)' (41)): default reduction by rule 48
    executeAction(): of rule 48 ...
    ... action of rule 48 completed
    pop(1) from stack having size 8
    pop(): next state: 60, token: `postfix_expression'
    reduce(): by rule 48 to N-terminal `postfix_expression'
    ==
    lookup(60, `postfix_expression'): shift 45 (`postfix_expression' processed)
    push(state 45)
    ==
    lookup(45, `)' (41)): default reduction by rule 46
    executeAction(): of rule 46 ...
    ... action of rule 46 completed
    pop(1) from stack having size 8
    pop(): next state: 60, token: `unary_expression'
    reduce(): by rule 46 to N-terminal `unary_expression'
    ==
    lookup(60, `unary_expression'): shift 44 (`unary_expression' processed)
    push(state 44)
    ==
    lookup(44, `)' (41)): default reduction by rule 43
    executeAction(): of rule 43 ...
    ... action of rule 43 completed
    pop(1) from stack having size 8
    pop(): next state: 60, token: `multiplicative_expression'
    reduce(): by rule 43 to N-terminal `multiplicative_expression'
    ==
    lookup(60, `multiplicative_expression'): shift 43 (`multiplicative_expression' processed)
    push(state 43)
    ==
    lookup(43, `)' (41)): default reduction by rule 40
    executeAction(): of rule 40 ...
    ... action of rule 40 completed
    pop(1) from stack having size 8
    pop(): next state: 60, token: `additive_expression'
    reduce(): by rule 40 to N-terminal `additive_expression'
    ==
    lookup(60, `additive_expression'): shift 42 (`additive_expression' processed)
    push(state 42)
    ==
    lookup(42, `)' (41)): default reduction by rule 35
    executeAction(): of rule 35 ...
    ... action of rule 35 completed
    pop(1) from stack having size 8
    pop(): next state: 60, token: `relational_expression'
    reduce(): by rule 35 to N-terminal `relational_expression'
    ==
    lookup(60, `relational_expression'): shift 41 (`relational_expression' processed)
    push(state 41)
    ==
    lookup(41, `)' (41)): default reduction by rule 32
    executeAction(): of rule 32 ...
    ... action of rule 32 completed
    pop(1) from stack having size 8
    pop(): next state: 60, token: `equality_expression'
    reduce(): by rule 32 to N-terminal `equality_expression'
    ==
    lookup(60, `equality_expression'): shift 40 (`equality_expression' processed)
    push(state 40)
    ==
    lookup(40, `)' (41)): default reduction by rule 30
    executeAction(): of rule 30 ...
    ... action of rule 30 completed
    pop(1) from stack having size 8
    pop(): next state: 60, token: `logical_and_expression'
    reduce(): by rule 30 to N-terminal `logical_and_expression'
    ==
    lookup(60, `logical_and_expression'): shift 39 (`logical_and_expression' processed)
    push(state 39)
    ==
    lookup(39, `)' (41)): default reduction by rule 28
    executeAction(): of rule 28 ...
    ... action of rule 28 completed
    pop(1) from stack having size 8
    pop(): next state: 60, token: `expression'
    reduce(): by rule 28 to N-terminal `expression'
    ==
    lookup(60, `expression'): shift 89 (`expression' processed)
    push(state 89)
    ==
    lookup(89, `)' (41)): shift 115 (`)' (41) processed)
    push(state 115)
    ==
    nextToken(): using `;' (59)
    lookup(115, `;' (59)): shift 27 (`;' (59) processed)
    push(state 27)
    ==
    lookup(27, `_UNDETERMINED_'): default reduction by rule 26
    executeAction(): of rule 26 ...
    ... action of rule 26 completed
    pop(1) from stack having size 10
    pop(): next state: 115, token: `assignment_statement'
    reduce(): by rule 26 to N-terminal `assignment_statement'
    ==
    lookup(115, `assignment_statement'): shift 21 (`assignment_statement' processed)
    push(state 21)
    ==
    lookup(21, `_UNDETERMINED_'): default reduction by rule 24
    executeAction(): of rule 24 ...
    ... action of rule 24 completed
    pop(1) from stack having size 10
    pop(): next state: 115, token: `statement'
    reduce(): by rule 24 to N-terminal `statement'
    ==
    lookup(115, `statement'): shift 123 (`statement' processed)
    push(state 123)
    ==
    lookup(123, `_UNDETERMINED_'): default reduction by rule 64
    executeAction(): of rule 64 ...
    ... action of rule 64 completed
    pop(5) from stack having size 10
    pop(): next state: 15, token: `iteration_statement'
    reduce(): by rule 64 to N-terminal `iteration_statement'
    ==
    lookup(15, `iteration_statement'): shift 20 (`iteration_statement' processed)
    push(state 20)
    ==
    lookup(20, `_UNDETERMINED_'): default reduction by rule 23
    executeAction(): of rule 23 ...
    ... action of rule 23 completed
    pop(1) from stack having size 6
    pop(): next state: 15, token: `statement'
    reduce(): by rule 23 to N-terminal `statement'
    ==
    lookup(15, `statement'): shift 16 (`statement' processed)
    push(state 16)
    ==
    lookup(16, `_UNDETERMINED_'): default reduction by rule 19
    executeAction(): of rule 19 ...
    ... action of rule 19 completed
    pop(1) from stack having size 6
    pop(): next state: 15, token: `statement_list'
    reduce(): by rule 19 to N-terminal `statement_list'
    ==
    lookup(15, `statement_list'): shift 36 (`statement_list' processed)
    push(state 36)
    ==
    nextToken(): using `IDENTIFIER'
    lookup(36, `IDENTIFIER'): shift 29 (`IDENTIFIER' processed)
    push(state 29)
    ==
    lookup(29, `_UNDETERMINED_'): default reduction by rule 57
    executeAction(): of rule 57 ...
    ... action of rule 57 completed
    pop(1) from stack having size 7
    pop(): next state: 36, token: `l_expression'
    reduce(): by rule 57 to N-terminal `l_expression'
    ==
    lookup(36, `l_expression'): shift 28 (`l_expression' processed)
    push(state 28)
    ==
    nextToken(): using `=' (61)
    lookup(28, `=' (61)): shift 62 (`=' (61) processed)
    push(state 62)
    ==
    nextToken(): using `INT_CONSTANT'
    lookup(62, `INT_CONSTANT'): shift 52 (`INT_CONSTANT' processed)
    push(state 52)
    ==
    lookup(52, `_UNDETERMINED_'): default reduction by rule 53
    executeAction(): of rule 53 ...
    ... action of rule 53 completed
    pop(1) from stack having size 9
    pop(): next state: 62, token: `primary_expression'
    reduce(): by rule 53 to N-terminal `primary_expression'
    ==
    lookup(62, `primary_expression'): shift 47 (`primary_expression' processed)
    push(state 47)
    ==
    lookup(47, `_UNDETERMINED_'): default reduction by rule 48
    executeAction(): of rule 48 ...
    ... action of rule 48 completed
    pop(1) from stack having size 9
    pop(): next state: 62, token: `postfix_expression'
    reduce(): by rule 48 to N-terminal `postfix_expression'
    ==
    lookup(62, `postfix_expression'): shift 45 (`postfix_expression' processed)
    push(state 45)
    ==
    lookup(45, `_UNDETERMINED_'): default reduction by rule 46
    executeAction(): of rule 46 ...
    ... action of rule 46 completed
    pop(1) from stack having size 9
    pop(): next state: 62, token: `unary_expression'
    reduce(): by rule 46 to N-terminal `unary_expression'
    ==
    lookup(62, `unary_expression'): shift 44 (`unary_expression' processed)
    push(state 44)
    ==
    lookup(44, `_UNDETERMINED_'): default reduction by rule 43
    executeAction(): of rule 43 ...
    ... action of rule 43 completed
    pop(1) from stack having size 9
    pop(): next state: 62, token: `multiplicative_expression'
    reduce(): by rule 43 to N-terminal `multiplicative_expression'
    ==
    lookup(62, `multiplicative_expression'): shift 43 (`multiplicative_expression' processed)
    push(state 43)
    ==
    nextToken(): using `;' (59)
    lookup(43, `;' (59)): default reduction by rule 40
    executeAction(): of rule 40 ...
    ... action of rule 40 completed
    pop(1) from stack having size 9
    pop(): next state: 62, token: `additive_expression'
    reduce(): by rule 40 to N-terminal `additive_expression'
    ==
    lookup(62, `additive_expression'): shift 42 (`additive_expression' processed)
    push(state 42)
    ==
    lookup(42, `;' (59)): default reduction by rule 35
    executeAction(): of rule 35 ...
    ... action of rule 35 completed
    pop(1) from stack having size 9
    pop(): next state: 62, token: `relational_expression'
    reduce(): by rule 35 to N-terminal `relational_expression'
    ==
    lookup(62, `relational_expression'): shift 41 (`relational_expression' processed)
    push(state 41)
    ==
    lookup(41, `;' (59)): default reduction by rule 32
    executeAction(): of rule 32 ...
    ... action of rule 32 completed
    pop(1) from stack having size 9
    pop(): next state: 62, token: `equality_expression'
    reduce(): by rule 32 to N-terminal `equality_expression'
    ==
    lookup(62, `equality_expression'): shift 40 (`equality_expression' processed)
    push(state 40)
    ==
    lookup(40, `;' (59)): default reduction by rule 30
    executeAction(): of rule 30 ...
    ... action of rule 30 completed
    pop(1) from stack having size 9
    pop(): next state: 62, token: `logical_and_expression'
    reduce(): by rule 30 to N-terminal `logical_and_expression'
    ==
    lookup(62, `logical_and_expression'): shift 39 (`logical_and_expression' processed)
    push(state 39)
    ==
    lookup(39, `;' (59)): default reduction by rule 28
    executeAction(): of rule 28 ...
    ... action of rule 28 completed
    pop(1) from stack having size 9
    pop(): next state: 62, token: `expression'
    reduce(): by rule 28 to N-terminal `expression'
    ==
    lookup(62, `expression'): shift 91 (`expression' processed)
    push(state 91)
    ==
    lookup(91, `;' (59)): shift 117 (`;' (59) processed)
    push(state 117)
    ==
    lookup(117, `_UNDETERMINED_'): default reduction by rule 27
    executeAction(): of rule 27 ...
    ... action of rule 27 completed
    pop(4) from stack having size 10
    pop(): next state: 36, token: `assignment_statement'
    reduce(): by rule 27 to N-terminal `assignment_statement'
    ==
    lookup(36, `assignment_statement'): shift 21 (`assignment_statement' processed)
    push(state 21)
    ==
    lookup(21, `_UNDETERMINED_'): default reduction by rule 24
    executeAction(): of rule 24 ...
    ... action of rule 24 completed
    pop(1) from stack having size 7
    pop(): next state: 36, token: `statement'
    reduce(): by rule 24 to N-terminal `statement'
    ==
    lookup(36, `statement'): shift 35 (`statement' processed)
    push(state 35)
    ==
    lookup(35, `_UNDETERMINED_'): default reduction by rule 20
    executeAction(): of rule 20 ...
    ... action of rule 20 completed
    pop(2) from stack having size 7
    pop(): next state: 15, token: `statement_list'
    reduce(): by rule 20 to N-terminal `statement_list'
    ==
    lookup(15, `statement_list'): shift 36 (`statement_list' processed)
    push(state 36)
    ==
    nextToken(): using `RETURN'
    lookup(36, `RETURN'): shift 22 (`RETURN' processed)
    push(state 22)
    ==
    nextToken(): using `INT_CONSTANT'
    lookup(22, `INT_CONSTANT'): shift 52 (`INT_CONSTANT' processed)
    push(state 52)
    ==
    lookup(52, `_UNDETERMINED_'): default reduction by rule 53
    executeAction(): of rule 53 ...
    ... action of rule 53 completed
    pop(1) from stack having size 8
    pop(): next state: 22, token: `primary_expression'
    reduce(): by rule 53 to N-terminal `primary_expression'
    ==
    lookup(22, `primary_expression'): shift 47 (`primary_expression' processed)
    push(state 47)
    ==
    lookup(47, `_UNDETERMINED_'): default reduction by rule 48
    executeAction(): of rule 48 ...
    ... action of rule 48 completed
    pop(1) from stack having size 8
    pop(): next state: 22, token: `postfix_expression'
    reduce(): by rule 48 to N-terminal `postfix_expression'
    ==
    lookup(22, `postfix_expression'): shift 45 (`postfix_expression' processed)
    push(state 45)
    ==
    lookup(45, `_UNDETERMINED_'): default reduction by rule 46
    executeAction(): of rule 46 ...
    ... action of rule 46 completed
    pop(1) from stack having size 8
    pop(): next state: 22, token: `unary_expression'
    reduce(): by rule 46 to N-terminal `unary_expression'
    ==
    lookup(22, `unary_expression'): shift 44 (`unary_expression' processed)
    push(state 44)
    ==
    lookup(44, `_UNDETERMINED_'): default reduction by rule 43
    executeAction(): of rule 43 ...
    ... action of rule 43 completed
    pop(1) from stack having size 8
    pop(): next state: 22, token: `multiplicative_expression'
    reduce(): by rule 43 to N-terminal `multiplicative_expression'
    ==
    lookup(22, `multiplicative_expression'): shift 43 (`multiplicative_expression' processed)
    push(state 43)
    ==
    nextToken(): using `;' (59)
    lookup(43, `;' (59)): default reduction by rule 40
    executeAction(): of rule 40 ...
    ... action of rule 40 completed
    pop(1) from stack having size 8
    pop(): next state: 22, token: `additive_expression'
    reduce(): by rule 40 to N-terminal `additive_expression'
    ==
    lookup(22, `additive_expression'): shift 42 (`additive_expression' processed)
    push(state 42)
    ==
    lookup(42, `;' (59)): default reduction by rule 35
    executeAction(): of rule 35 ...
    ... action of rule 35 completed
    pop(1) from stack having size 8
    pop(): next state: 22, token: `relational_expression'
    reduce(): by rule 35 to N-terminal `relational_expression'
    ==
    lookup(22, `relational_expression'): shift 41 (`relational_expression' processed)
    push(state 41)
    ==
    lookup(41, `;' (59)): default reduction by rule 32
    executeAction(): of rule 32 ...
    ... action of rule 32 completed
    pop(1) from stack having size 8
    pop(): next state: 22, token: `equality_expression'
    reduce(): by rule 32 to N-terminal `equality_expression'
    ==
    lookup(22, `equality_expression'): shift 40 (`equality_expression' processed)
    push(state 40)
    ==
    lookup(40, `;' (59)): default reduction by rule 30
    executeAction(): of rule 30 ...
    ... action of rule 30 completed
    pop(1) from stack having size 8
    pop(): next state: 22, token: `logical_and_expression'
    reduce(): by rule 30 to N-terminal `logical_and_expression'
    ==
    lookup(22, `logical_and_expression'): shift 39 (`logical_and_expression' processed)
    push(state 39)
    ==
    lookup(39, `;' (59)): default reduction by rule 28
    executeAction(): of rule 28 ...
    ... action of rule 28 completed
    pop(1) from stack having size 8
    pop(): next state: 22, token: `expression'
    reduce(): by rule 28 to N-terminal `expression'
    ==
    lookup(22, `expression'): shift 38 (`expression' processed)
    push(state 38)
    ==
    lookup(38, `;' (59)): shift 68 (`;' (59) processed)
    push(state 68)
    ==
    lookup(68, `_UNDETERMINED_'): default reduction by rule 25
    executeAction(): of rule 25 ...
    ... action of rule 25 completed
    pop(3) from stack having size 9
    pop(): next state: 36, token: `statement'
    reduce(): by rule 25 to N-terminal `statement'
    ==
    lookup(36, `statement'): shift 35 (`statement' processed)
    push(state 35)
    ==
    lookup(35, `_UNDETERMINED_'): default reduction by rule 20
    executeAction(): of rule 20 ...
    ... action of rule 20 completed
    pop(2) from stack having size 7
    pop(): next state: 15, token: `statement_list'
    reduce(): by rule 20 to N-terminal `statement_list'
    ==
    lookup(15, `statement_list'): shift 36 (`statement_list' processed)
    push(state 36)
    ==
    nextToken(): using `}' (125)
    lookup(36, `}' (125)): shift 67 (`}' (125) processed)
    push(state 67)
    ==
    lookup(67, `_UNDETERMINED_'): default reduction by rule 18
    executeAction(): of rule 18 ...
    ... action of rule 18 completed
    pop(4) from stack having size 7
    pop(): next state: 8, token: `compound_statement'
    reduce(): by rule 18 to N-terminal `compound_statement'
    ==
    lookup(8, `compound_statement'): shift 10 (`compound_statement' processed)
    push(state 10)
    ==
    lookup(10, `_UNDETERMINED_'): default reduction by rule 3
    executeAction(): of rule 3 ...
    ... action of rule 3 completed
    pop(3) from stack having size 4
    pop(): next state: 0, token: `function_definition'
    reduce(): by rule 3 to N-terminal `function_definition'
    ==
    lookup(0, `function_definition'): shift 2 (`function_definition' processed)
    push(state 2)
    ==
    lookup(2, `_UNDETERMINED_'): default reduction by rule 1
    executeAction(): of rule 1 ...
    ... action of rule 1 completed
    pop(1) from stack having size 2
    pop(): next state: 0, token: `translation_unit'
    reduce(): by rule 1 to N-terminal `translation_unit'
    ==
    lookup(0, `translation_unit'): shift 1 (`translation_unit' processed)
    push(state 1)
    ==
    nextToken(): using `_EOF_'
    lookup(1, `_EOF_'): ACCEPT
    ACCEPT(): Parsing successful
    parse(): returns 0
